name: Feature-Flag-Continues-Integration

on:
    push:
      tags-ignore:
        - v[0-9]+.[0-9]+.[0-9]+-stg
        - v[0-9]+.[0-9]+.[0-9]+
      branches:
        - main
      paths-ignore:
        - CHANGELOG.md
        - release_version_tools/setup.py
    pull_request:
      branches:
        - main

jobs:
    CI:
        runs-on: ubuntu-latest
        strategy:
            matrix:
                python-version: ["3.10"]

        steps:
            - name: Checkout
              uses: actions/checkout@v2

            - name: Set up python ${{ matrix.python-version }}
              uses: actions/setup-python@v3
              with:
                python-version: ${{ matrix.python-version }}

            - uses: actions/checkout@v3
              with:
                  fetch-depth: 0
                  token: ${{ secrets.GITHUB_TOKEN }}
                  ssh-key: "${{ secrets.COMMIT_KEY }}"

            - name: Create (and push) an empty commit if there is just one commit on the current branch
              if: github.event_name == 'pull_request'
              run: |
                  CURRENT_BRANCH_NUM_COMMITS=`git log --oneline origin/main..HEAD | wc -l`
                  if [ "$CURRENT_BRANCH_NUM_COMMITS" -le "2" ] ; then
                    git switch ${{ github.head_ref }}
                    git config user.email "no-reply+github-actions@ioet.com"
                    git config user.name "ioet ops"
                    git commit --allow-empty -m 'fix: Autogenerated commit to ensure that there are at least two commits on all branches/PRs'
                    git push
                  else
                    echo "We already have multiple commits on the current branch"
                  fi

            - name: Install poetry
              run: python -m pip install poetry==1.5.1

            - name: Configure poetry
              run: python -m poetry config virtualenvs.in-project true

            - name: Cache the virtualenv
              uses: actions/cache@v2
              with:
                path: ./.venv
                key: ${{ runner.os }}-venv-${{ hashFiles('**/poetry.lock') }}

            - name: Install dependencies
              run: poetry install

            - name: Run linters
              run: |
                poetry run flake8 . --count

            - name: Run test
              run: poetry run pytest -v

            - name: Test library import
              run: ./scripts/test_import/test-import.sh

            - name: Python Semantic Release
              if: github.ref == 'refs/heads/main' && github.event_name == 'push'
              run: |
                pip install python-semantic-release==7.34.6
                git config --global user.name "github-actions"
                git config --global user.email "action@github.com"
                DEBUG='semantic_release.*' semantic-release publish -D commit_author="github-actions <action@github.com>"
